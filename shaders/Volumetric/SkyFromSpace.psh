#include "Scatter.hlsl"

struct VS_OUTPUT {
	float4 Position : SV_POSITION;
	float3 Colour1	: COLOR0;
	float3 Colour2	: COLOR1;
	float3 T0	    : TEXCOORD0;
	float  Depth : TEXCOORD1;
};

float4 main(VS_OUTPUT v) : SV_Target {
	/*float3 colour = getScatterColour(v.Colour1, v.Colour2, v.T0);
	colour = 1.0 - exp(colour * -0.8f);

	return float4(colour, colour.b);*/

	float fExposure = 2.0f;

	float fCos = dot(v3LightPos, v.T0) / length(v.T0);
	float fRayleighPhase = 0.75 * (1.0 + (fCos * fCos));
	float fMiePhase = 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCos * fCos) / pow(1.0 + g2 - 2.0 * g * fCos, 1.5);
	float sun = 2.0 * ((1.0 - 0.2) / (2.0 + 0.2)) * (1.0 + fCos * fCos) / pow(1.0 + 0.2 - 2.0 * (-0.2) * fCos, 1.0);

	float4 f4Ambient = float4(0.05, 0.05, 0.1, 1.0) * (sun * v.Depth);

	float4 f4Color = (fRayleighPhase * float4(v.Colour1, 1.0) + fMiePhase * float4(v.Colour2, 1.0)) + f4Ambient;
	float4 HDR = 1.0 - exp(f4Color * -fExposure);
	float nightmult = clamp(max(HDR.x, max(HDR.y, HDR.z)) * 1.5,0.0,1.0);

	HDR.a = nightmult;
	return HDR;
}